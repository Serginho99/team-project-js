{"mappings":"ujBAAAA,EAAAC,QAAiB,IAAAC,IAAoBC,EAAA,SAAAC,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,U,ICA5FL,EAAA,SAAAM,SAA8CC,KAAKC,MAAM,gHCAzD,IAAAC,EAAAT,EAAA,S,aAGA,MAIMU,EAAeC,SAASC,cAAc,eACtCC,EAAUF,SAASC,cAAc,SACjCE,EAAMH,SAASC,cAAc,eAC7BG,EAAoBJ,SAASC,cAAc,qBAC3CI,EAAwBL,SAASC,cAAc,eAC/CK,EAAcN,SAASC,cAAc,cAErCM,EAAS,CACb,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAGlB,IAAIC,EACAC,EA0BJ,SAASC,EAAWC,EAAKC,GAKvB,MAAMC,EAJgBR,EAAOS,QAAO,SAAUC,GAC5C,OAA4C,IAArCH,EAASI,UAAUC,QAAQF,EAAET,G,IAGHY,KAAIC,GAAKA,EAAEZ,OAC9C,OACEI,EACA,+BAA+BC,EAASN,4CAGtCM,EAASQ,YACL,aAtEK,kCAsEiBR,EAASQ,qBAC7BR,EAASS,mBACGT,EAASN,QACvB,aAAanB,EAAA,kBACXyB,EAASS,mBACGT,EAASN,2FAIGM,EAASS,+DAG/BR,EAAWS,MAAM,EAAG,GAAGC,KAAK,MACxB,oCAAoCV,EACjCS,MAAM,EAAG,GACTC,KAAK,SACNV,EAAWW,OAAS,EAAI,UAAY,SAChCZ,EAASa,aAAaH,MAAM,EAAG,UACrC,2CAA2CV,EAASa,aAAaH,MAC/D,EACA,qDAGqBV,EAASc,0E,CAWlDC,eAAeC,EAAgBC,GAC7B,MAAMC,QAAEA,EAAOC,cAAEA,SArDnBJ,eAAkCK,GAGhC,aAFuBC,EAAArC,GAAMsC,IAAI,mGACoBF,MACrCG,I,CAkDyBC,CAAmBP,GAiB9D,IAAmBQ,IAhBPN,EAiBVtB,EAAa6B,KAAKC,KAAKF,EAAe,IAhBtC,IACErC,EAAQwC,UAAY,GACpBxC,EAAQyC,mBAAmB,YAAiCX,EARjDY,OAAOhC,EAAY,KASjB,IAATmB,GACFc,EAAAC,OAAOC,QAAQ,oBAAoBd,YAEjCF,GAAQpB,IACVP,EAAkB4C,UAAUC,IAAI,aAChCJ,EAAAC,OAAOI,KAAK,8D,CAEd,MAAOC,GACPC,QAAQC,IAAIF,E,EApFhBpD,EAAauD,iBAAiB,SAC9B,SAA0BC,GACxBA,EAAEC,iBACF9C,EAAO,EACPoB,EAAgBpB,GAChBP,EAAI6C,UAAUC,IAAI,aAClB7C,EAAkB4C,UAAUS,OAAO,aACnCpD,EAAsB2C,UAAUC,IAAI,aACpC3C,EAAY0C,UAAUC,IAAI,Y,IAG5B7C,EAAkBkD,iBAAiB,SACnC,WACE5C,GAAQ,EACRR,EAAQwD,eAAe,CAAEC,SAAU,WACnC7B,EAAgBpB,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-32d546c8b06f5caf.js","node_modules/@parcel/runtime-js/lib/runtime-4a0dbfa04ea13ca1.js","src/js/topRating.js"],"sourcesContent":["module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2G1uI\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7DvOR\\\":\\\"index.1b4f4407.js\\\",\\\"2G1uI\\\":\\\"default-poster-webp.86f2548c.webp\\\"}\"));","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst apiKey = 'd7be37f171d8123214539749ff0838e8';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst imgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst topRatingBtn = document.querySelector('.top-rating');\nconst mainRef = document.querySelector('#main');\nconst pag = document.querySelector('.pagination');\nconst loadMoreRatingBtn = document.querySelector('.load-more-rating');\nconst loadMoreBtnGenreFilms = document.querySelector('.select-btn');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nconst genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nlet page;\nlet totalPages;\n\ntopRatingBtn.addEventListener('click', onClickRatingBtn);\nfunction onClickRatingBtn(e) {\n  e.preventDefault();\n  page = 1;\n  renderContainer(page);\n  pag.classList.add('is-hidden');\n  loadMoreRatingBtn.classList.remove('is-hidden');\n  loadMoreBtnGenreFilms.classList.add('is-hidden');\n  loadMoreBtn.classList.add('is-hidden');\n}\n\nloadMoreRatingBtn.addEventListener('click', onClickLoadMoreRating);\nfunction onClickLoadMoreRating() {\n  page += 1;\n  mainRef.scrollIntoView({ behavior: 'smooth' });\n  renderContainer(page);\n}\n\nasync function fetchMovieByRating(page) {\n  const response = await axios.get(`\n   ${baseUrl}/movie/top_rated?api_key=${apiKey}&page=${page}`);\n  return response.data;\n}\n\nfunction renderList(acc, cardFilm) {\n  let genreArrayOfObj = genres.filter(function (g) {\n    return cardFilm.genre_ids.indexOf(g.id) !== -1;\n  });\n\n  const genreNames = genreArrayOfObj.map(a => a.name);\n  return (\n    acc +\n    `<div class=\"movie\" data-id=\"${cardFilm.id}\">\n    <div class=\"wrapper-img\">\n    ${\n      cardFilm.poster_path\n        ? `<img src='${imgUrl + cardFilm.poster_path}' alt='${\n            cardFilm.title\n          }' data-id=\"${cardFilm.id}\" >`\n        : `<img src=\"${require('/src/images/default-poster-webp.webp')}\" alt=\"${\n            cardFilm.title\n          }\" data-id=\"${cardFilm.id}\">`\n    }\n    </div>\n        <div class=\"movie-info\">\n          <h3 class=\"title__info\">${cardFilm.title}</h3>\n            <div class=\"overview\">\n            ${\n              genreNames.slice(0, 2).join(', ')\n                ? `<p class=\"info__genres-and-year\">${genreNames\n                    .slice(0, 2)\n                    .join(', ')} ${\n                    genreNames.length > 2 ? ', Other' : ' '\n                  } | ${cardFilm.release_date.slice(0, 4)} </p>`\n                : `<p class=\"info__genres-and-year\"> N/A | ${cardFilm.release_date.slice(\n                    0,\n                    4\n                  )} </p>`\n            }\n            <span class=\"vote_average\">${cardFilm.vote_average}</span> \n            </div>\n        </div>\n        </div>`\n  );\n}\n\nfunction generateContentList(array) {\n  return array.reduce(renderList, '');\n}\n\nasync function renderContainer(page) {\n  const { results, total_results } = await fetchMovieByRating(page);\n  totalPage(total_results);\n  try {\n    mainRef.innerHTML = '';\n    mainRef.insertAdjacentHTML('beforeend', generateContentList(results));\n    if (page === 1) {\n      Notify.success(`Hooray! We found ${total_results} films.`);\n    }\n    if (page >= totalPages) {\n      loadMoreRatingBtn.classList.add('is-hidden');\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction totalPage(totalResults) {\n  totalPages = Math.ceil(totalResults / 20);\n}\n"],"names":["module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$2shzp","$abf3360b32e048c0$var$topRatingBtn","document","querySelector","$abf3360b32e048c0$var$mainRef","$abf3360b32e048c0$var$pag","$abf3360b32e048c0$var$loadMoreRatingBtn","$abf3360b32e048c0$var$loadMoreBtnGenreFilms","$abf3360b32e048c0$var$loadMoreBtn","$abf3360b32e048c0$var$genres","id","name","$abf3360b32e048c0$var$page","$abf3360b32e048c0$var$totalPages","$abf3360b32e048c0$var$renderList","acc","cardFilm","genreNames","filter","g","genre_ids","indexOf","map","a","poster_path","title","slice","join","length","release_date","vote_average","async","$abf3360b32e048c0$var$renderContainer","page2","results","total_results","page1","$parcel$interopDefault","get","data","$abf3360b32e048c0$var$fetchMovieByRating","totalResults","Math","ceil","innerHTML","insertAdjacentHTML","reduce","$eWCmQ","Notify","success","classList","add","info","error","console","log","addEventListener","e","preventDefault","remove","scrollIntoView","behavior"],"version":3,"file":"index.1b4f4407.js.map"}