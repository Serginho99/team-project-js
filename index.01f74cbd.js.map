{"mappings":"ujBAAAA,EAAAC,QAAiB,IAAAC,IAAoBC,EAAA,SAAAC,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,U,ICA5FL,EAAA,SAAAM,SAA8CC,KAAKC,MAAM,gHCAzD,IAAAC,EAAAT,EAAA,S,aAGA,MAGMU,EAASC,SAASC,cAAc,cAChCC,EAASF,SAASC,cAAc,SAChCE,EAAMH,SAASC,cAAc,eAC7BG,EAAiBJ,SAASC,cAAc,cACxCI,EAAYL,SAASC,cAAc,eACnCK,EAAYN,SAASC,cAAc,qBAQnCM,EAAS,CACb,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAGlB,IAAIC,EACAC,EACAC,EA4BJ,SAASC,EAAWC,EAAKC,GAKvB,MAAMC,EAJgBT,EAAOU,QAAO,SAAUC,GAC5C,OAA4C,IAArCH,EAASI,UAAUC,QAAQF,EAAEV,G,IAGHa,KAAIC,GAAKA,EAAEb,OAC9C,OACEK,EACA,+BAA+BC,EAASP,4CAGtCO,EAASQ,YACL,aA9EK,kCA8EiBR,EAASQ,qBAC7BR,EAASS,mBACGT,EAASP,QACvB,aAAanB,EAAA,kBACX0B,EAASS,mBACGT,EAASP,2FAIGO,EAASS,+DAG/BR,EAAWS,MAAM,EAAG,GAAGC,KAAK,MACxB,oCAAoCV,EACjCS,MAAM,EAAG,GACTC,KAAK,SACNV,EAAWW,OAAS,EAAI,UAAY,SAChCZ,EAASa,aAAaH,MAAM,EAAG,UACrC,2CAA2CV,EAASa,aAAaH,MAC/D,EACA,qDAGqBV,EAASc,0E,CAWlDC,eAAeC,EAAgBvB,EAAIwB,GACjC,MAAMC,QAAEA,EAAOC,cAAEA,SArDnBJ,eAA8BtB,EAAI2B,GAGhC,aAFuBC,EAAAtC,GAAMuC,IAAI,wGACyB7B,UAAW2B,MACrDG,I,CAkDyBC,CAAe/B,EAAIwB,GAa9D,IAAmBQ,IAZPN,EAaVtB,EAAa6B,KAAKC,KAAKF,EAAe,IAZtC,IACe,IAATR,GACFW,EAAAC,OAAOC,QAAQ,oBAAoBX,YAErChC,EAAO4C,UAAY,GACnB5C,EAAO6C,mBAAmB,YAAiCd,EAXhDe,OAAOnC,EAAY,I,CAY9B,MAAOoC,GACPC,QAAQC,IAAIF,E,EAlFhBlD,EAAOqD,iBAAiB,UAExB,SAAwBC,GACtBA,EAAMC,iBACNjD,EAAUkD,UAAUC,OAAO,aAC3BrD,EAAIoD,UAAUE,IAAI,aAClB9C,EAAQ0C,EAAMK,OAAOC,MACrBjD,EAAO,EACPqB,EAAgBpB,EAAOD,GACvBN,EAAemD,UAAUE,IAAI,aAC7BnD,EAAUiD,UAAUE,IAAI,Y,IAG1BpD,EAAU+C,iBAAiB,SAC3B,WACE1C,GAAQ,EACRR,EAAO0D,eAAe,CAAEC,SAAU,WAClC9B,EAAgBpB,EAAOD,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-32d546c8b06f5caf.js","node_modules/@parcel/runtime-js/lib/runtime-6dc6c3f808c8b261.js","src/js/genreFilter.js"],"sourcesContent":["module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2G1uI\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fa9hf\\\":\\\"index.01f74cbd.js\\\",\\\"2G1uI\\\":\\\"default-poster-webp.86f2548c.webp\\\"}\"));","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst apiKey = 'd7be37f171d8123214539749ff0838e8';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst imgUrl = 'https://image.tmdb.org/t/p/w500';\nconst select = document.querySelector('.js-select');\nconst mainEl = document.querySelector('#main');\nconst pag = document.querySelector('.pagination');\nconst buttonLoadMore = document.querySelector('.load-more');\nconst selectBtn = document.querySelector('.select-btn');\nconst btnRating = document.querySelector('.load-more-rating');\n\n// const divFilter = document.querySelector('.filter');\n// const formEl = document.querySelector('.form-filter');\n// console.log(formEl);\n\n// console.log(select);\n\nconst genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nlet page;\nlet value;\nlet totalPages;\n\nselect.addEventListener('change', onSelectChange);\n\nfunction onSelectChange(event) {\n  event.preventDefault();\n  selectBtn.classList.remove('is-hidden');\n  pag.classList.add('is-hidden');\n  value = event.target.value;\n  page = 1;\n  renderContainer(value, page);\n  buttonLoadMore.classList.add('is-hidden');\n  btnRating.classList.add('is-hidden');\n}\n\nselectBtn.addEventListener('click', onSelectMore);\nfunction onSelectMore() {\n  page += 1;\n  mainEl.scrollIntoView({ behavior: 'smooth' });\n  renderContainer(value, page);\n}\n\nasync function fetchMovieById(id, page) {\n  const response = await axios.get(`\n  ${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=${id}&page=${page}`);\n  return response.data;\n}\n\nfunction renderList(acc, cardFilm) {\n  let genreArrayOfObj = genres.filter(function (g) {\n    return cardFilm.genre_ids.indexOf(g.id) !== -1;\n  });\n\n  const genreNames = genreArrayOfObj.map(a => a.name);\n  return (\n    acc +\n    `<div class=\"movie\" data-id=\"${cardFilm.id}\">\n    <div class=\"wrapper-img\">\n    ${\n      cardFilm.poster_path\n        ? `<img src='${imgUrl + cardFilm.poster_path}' alt='${\n            cardFilm.title\n          }' data-id=\"${cardFilm.id}\" >`\n        : `<img src=\"${require('/src/images/default-poster-webp.webp')}\" alt=\"${\n            cardFilm.title\n          }\" data-id=\"${cardFilm.id}\">`\n    }\n    </div>\n        <div class=\"movie-info\">\n          <h3 class=\"title__info\">${cardFilm.title}</h3>\n            <div class=\"overview\">\n            ${\n              genreNames.slice(0, 2).join(', ')\n                ? `<p class=\"info__genres-and-year\">${genreNames\n                    .slice(0, 2)\n                    .join(', ')} ${\n                    genreNames.length > 2 ? ', Other' : ' '\n                  } | ${cardFilm.release_date.slice(0, 4)} </p>`\n                : `<p class=\"info__genres-and-year\"> N/A | ${cardFilm.release_date.slice(\n                    0,\n                    4\n                  )} </p>`\n            }\n            <span class=\"vote_average\">${cardFilm.vote_average}</span> \n            </div>\n        </div>\n        </div>`\n  );\n}\n\nfunction generateContentList(array) {\n  return array.reduce(renderList, '');\n}\n\nasync function renderContainer(id, page) {\n  const { results, total_results } = await fetchMovieById(id, page);\n  totalPage(total_results);\n  try {\n    if (page === 1) {\n      Notify.success(`Hooray! We found ${total_results} films.`);\n    }\n    mainEl.innerHTML = '';\n    mainEl.insertAdjacentHTML('beforeend', generateContentList(results));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction totalPage(totalResults) {\n  totalPages = Math.ceil(totalResults / 20);\n}\n"],"names":["module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$2shzp","$769a45005850ecbf$var$select","document","querySelector","$769a45005850ecbf$var$mainEl","$769a45005850ecbf$var$pag","$769a45005850ecbf$var$buttonLoadMore","$769a45005850ecbf$var$selectBtn","$769a45005850ecbf$var$btnRating","$769a45005850ecbf$var$genres","id","name","$769a45005850ecbf$var$page","$769a45005850ecbf$var$value","$769a45005850ecbf$var$totalPages","$769a45005850ecbf$var$renderList","acc","cardFilm","genreNames","filter","g","genre_ids","indexOf","map","a","poster_path","title","slice","join","length","release_date","vote_average","async","$769a45005850ecbf$var$renderContainer","page2","results","total_results","page1","$parcel$interopDefault","get","data","$769a45005850ecbf$var$fetchMovieById","totalResults","Math","ceil","$eWCmQ","Notify","success","innerHTML","insertAdjacentHTML","reduce","error","console","log","addEventListener","event","preventDefault","classList","remove","add","target","value","scrollIntoView","behavior"],"version":3,"file":"index.01f74cbd.js.map"}