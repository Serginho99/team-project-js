{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-3572bb8a921b2923.js","node_modules/@parcel/runtime-js/lib/runtime-1202cce6c98708a9.js","src/js/serviceApi.js"],"sourcesContent":["module.exports = require('./helpers/bundle-url').getBundleURL('aH1t6') + require('./helpers/bundle-manifest').resolve(\"7u6Ym\");","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aH1t6\\\":\\\"index.ac6cca77.js\\\",\\\"7u6Ym\\\":\\\"default-poster-webp.86f2548c.webp\\\"}\"));","const API_KEY = 'api_key=d7be37f171d8123214539749ff0838e8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?' + API_KEY;\nconst genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('.form');\nconst search = document.getElementById('.search');\n\n// El pagination\nconst prev = document.querySelector('#prev');\nconst current = document.querySelector('#current');\nconst next = document.querySelector('#next');\n\nlet currentPage = 1;\nlet nextPage = 2;\nlet prevPage = 3;\nlet lastUrl = '';\nlet totalPages = 100;\n\ngetMovies(API_URL);\n\nexport function getMovies(url) {\n  lastUrl = url;\n  fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      showMovies(data.results);\n\n      currentPage = data.page;\n      console.log(currentPage);\n      nextPage = data.page + 1;\n      prevPage = data.page - 1;\n      totalPages = data.total_pages;\n\n      current.innerText = currentPage;\n\n      if (currentPage <= 1) {\n        prev.classList.add('disabled');\n        next.classList.remove('disabled');\n      } else if (currentPage >= totalPages) {\n        prev.classList.remove('disabled');\n        next.classList.add('disabled');\n      } else {\n        prev.classList.remove('disabled');\n        next.classList.remove('disabled');\n      }\n\n      if (data.results.length === 0) {\n        console.log('ERROR IN SEARCH');\n        getMovies(API_URL);\n      }\n    });\n}\n\nfunction showMovies(data) {\n  main.innerHTML = '';\n  data.forEach(movie => {\n    const {\n      title,\n      poster_path,\n      release_date,\n      overview,\n      genre_ids,\n      popular,\n      vote_average,\n      vote_count,\n      original_title,\n      id,\n    } = movie;\n    const movieEl = document.createElement('div');\n    movieEl.classList.add('movie');\n    movieEl.setAttribute('data-id', `${id}`);\n\n    let genreArrayOfObj = genres.filter(function (g) {\n      return genre_ids.indexOf(g.id) !== -1;\n    });\n\n    const genreNames = genreArrayOfObj.map(a => a.name);\n\n    movieEl.innerHTML = `\n    <div class=\"wrapper-img\">\n    ${\n      poster_path\n        ? `<img src='${IMG_URL + poster_path}' alt='${title}' data-id=\"${id}\">`\n        : `<img src=\"${require('/src/images/default-poster-webp.webp')}\" alt=\"${title}\" data-id=\"${id}\">`\n    }\n    </div>\n        <div class=\"movie-info\">\n          <h3 class=\"title__info\">${title}</h3>\n            <div class=\"overview\">\n            ${\n              genreNames.slice(0, 2).join(', ')\n                ? `<p class=\"info__genres-and-year\">${genreNames\n                    .slice(0, 2)\n                    .join(', ')} ${genreNames.length > 2 ? ' ' : ', Other'}\n             | ${release_date.slice(0, 4)} </p>`\n                : `<p class=\"info__genres-and-year\"> N/A\n             | ${release_date.slice(0, 4)} </p>`\n            }\n            </div>\n        </div>\n    `;\n    main.appendChild(movieEl);\n  });\n}\n// Pagination\nnext.addEventListener('click', () => {\n  if (nextPage > 0) {\n    pageCall(nextPage);\n  }\n});\n\nprev.addEventListener('click', () => {\n  console.log(currentPage);\n  if (prevPage <= totalPages && currentPage - 1 > 0) {\n    pageCall(prevPage);\n  }\n});\n\nfunction pageCall(page) {\n  main.scrollIntoView({ behavior: 'smooth' });\n  let urlSplit = lastUrl.split('?');\n  let queryParams = urlSplit[1].split('?');\n  let key = queryParams[queryParams.length - 1].split('=');\n  if (key[0] !== 'page') {\n    let url = lastUrl + '&page=' + page;\n    getMovies(url);\n  } else {\n    key[1] = page.toString();\n    let a = key.join('=');\n    queryParams[queryParams.length - 1] = a;\n    let b = queryParams.join('&');\n    let url = urlSplit[0] + '?' + b;\n    getMovies(url);\n  }\n}\n"],"names":["module","exports","parcelRequire","getBundleURL","resolve","register","JSON","parse","$7f4c7a7713320285$var$API_KEY","$7f4c7a7713320285$var$API_URL","$7f4c7a7713320285$var$BASE_URL","$7f4c7a7713320285$var$IMG_URL","$7f4c7a7713320285$var$genres","id","name","$7f4c7a7713320285$var$main","document","getElementById","$7f4c7a7713320285$var$prev","querySelector","$7f4c7a7713320285$var$current","$7f4c7a7713320285$var$next","$7f4c7a7713320285$var$currentPage","$7f4c7a7713320285$var$nextPage","$7f4c7a7713320285$var$prevPage","$7f4c7a7713320285$var$lastUrl","$7f4c7a7713320285$var$totalPages","$7f4c7a7713320285$export$60e1c8f5f122c5ac","url","fetch","then","res","json","data","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","overview","popular","vote_average","vote_count","original_title","movieEl","createElement","classList","add","setAttribute","concat","genreNames","filter","g","indexOf","map","a","slice","join","length","appendChild","$7f4c7a7713320285$var$showMovies","results","page","console","log","total_pages","innerText","remove","$7f4c7a7713320285$var$pageCall","scrollIntoView","behavior","urlSplit","split","queryParams","key","toString","b","addEventListener"],"version":3,"file":"index.ac6cca77.js.map"}